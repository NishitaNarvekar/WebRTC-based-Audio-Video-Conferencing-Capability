var express = require('express')
, app = express()
, http = require('http')
, server = http.createServer(app)
, io = require('socket.io').listen(server);
app.use(express.static(__dirname + '/public'));
app.get('/', function (req, res) {
    res.sendfile(__dirname + '/public/home.html');
});


app.get('/', function (request, response) {
    response.redirect('default.html');
}
		);


//var CLIENTS=[];

var usernames = {};

var sessionMgm = require("sessionManagement");

io.sockets.on('connection', function (socket) {

//CLIENTS.push(socket);
	
	
	//--------------------new
	
	socket.on('setUserInfo', function (data) {
        var sess = new Object();
        sess.sessionId = socket.id;
        console.log('::: A socket with session id ' + sess.sessionId + ' connected! ::: ');
        sess.userId = data.userId;
       sess.username = data.username;
       sess.role = data.role;
        sessionMgm.add(sess);
    });
	
	///--------------new

	//old 
    //socket.on('sendchat', function (data) {
     //   io.sockets.emit('updatechat', socket.username, data);
    //});
    
    //--------------new
    socket.on('sendchat', function(data) {
        if(data != null) {
            var user = sessionMgm.getSessionByUserId(data.userId);
            console.log('::: A socket with ID ' + user + ' connected! ::: ');
            if(user != null) {
                io.sockets.socket(user.sessionId).emit('updatechat',socket.username, data);
                io.sockets.socket(user.sessionId).emit('send2');
                io.sockets.socket(user.sessionId).emit('send4');
                io.sockets.socket(user.sessionId).emit('send5');
                io.sockets.socket(user.sessionId).emit('send1');
            } else {
                var sysMsg = {type: "error", message: "User not found!"};
                socket.emit('systemMessage', sysMsg);
            }
        }
    });
    socket.on('disconnect', function() {
        sessionMgm.remove(socket.id);
    });
    
    
    
    
    
    //-----------------------new
    
    
    socket.on('adduser', function (username) {
        socket.username = username;
        usernames[username] = username;
        
        //socket.emit('updatechat', 'SERVER', 'you have connected');
        //socket.broadcast.emit('updatechat', 'SERVER'
	//			, username + '  has connected');
        io.sockets.emit('updateusers', usernames);
        
    });
    socket.on('disconnect', function () {
        delete usernames[socket.username];
        io.sockets.emit('updateusers', usernames);
        socket.broadcast.emit('updatechat', 'SERVER'
				, socket.username + ' has disconnected');
    });
});





var port = 7777;
server.listen(port);
console.log('listening on port: ' + port);








